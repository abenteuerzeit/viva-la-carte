@model VLC.Models.Recipes.Hits

 @{
/////////////////////////////////////
#region RECIPE SEARCH PAGE NAV
/////////////////////////////////////
var ID = Model.Id;
var LINKS = Model.Links;
var COUNT = Model.Count;    var FROM = Model.From;
var TO = Model.To;
var HITS = Model.HitsList;
////////////////////////////////////////
///*******Create HTML elements*******///
////////////////////////////////////////
var query_string_value = Context.Request.Query["query"];

if (!string.IsNullOrWhiteSpace(query_string_value))
{
    <h1>Recipe Search Results for @query_string_value</h1>
}

<nav id="@Model.Id">
    <dl>
        <dt>
            Recipes found: <strong>@Model.Count</strong>.<br />
            <em>Displaying from @Model.From hits to @Model.To hits</em>
        </dt>
        <dd>
            <a href="@Model.Links.Next.Href" onclick="alert('TODO: Implement function to load more recipes
                                                    so that you scroll through the results like on a feed')">
                Next Hits List Page
            </a>
        </dd>
    </dl>
</nav>
    #endregion 
 }
@*
<div>
    <h4>Hits</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.From)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.From)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.To)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.To)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Count)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Count)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>*@
